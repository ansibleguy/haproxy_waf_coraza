---

force_update: false

defaults_app:
  response_check: false
  block: false  # SecRuleEngine

  log:
    level: 'info'
    format: 'json'
  transaction_ttl_sec: 60

  # see: https://github.com/corazawaf/coraza-coreruleset/releases
  ruleset_version: 'v4.7.0'

  # see: https://github.com/corazawaf/coraza-coreruleset/blob/main/rules/%40coraza.conf-recommended
  # and: https://coraza.io/docs/seclang/directives/
  crs_main:
    - 'SecRequestBodyAccess On'
    - |
      SecRule REQUEST_HEADERS:Content-Type "^(?:application(?:/soap\+|/)|text/)xml" \
         "id:'200000',phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=XML"
    - |
      SecRule REQUEST_HEADERS:Content-Type "^application/json" \
         "id:'200001',phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=JSON"
    - 'SecRequestBodyLimit 13107200'
    - 'SecRequestBodyInMemoryLimit 131072'
    - 'SecRequestBodyLimitAction Reject'
    - |
      SecRule REQBODY_ERROR "!@eq 0" \
          "id:'200002', phase:2,t:none,log,deny,status:400,msg:'Failed to parse request body.',logdata:'%{reqbody_error_msg}',severity:2"
    - |
      SecRule MULTIPART_STRICT_ERROR "!@eq 0" \
          "id:'200003',phase:2,t:none,log,deny,status:400, \
          msg:'Multipart request body failed strict validation: \
          PE %{REQBODY_PROCESSOR_ERROR}, \
          BQ %{MULTIPART_BOUNDARY_QUOTED}, \
          BW %{MULTIPART_BOUNDARY_WHITESPACE}, \
          DB %{MULTIPART_DATA_BEFORE}, \
          DA %{MULTIPART_DATA_AFTER}, \
          HF %{MULTIPART_HEADER_FOLDING}, \
          LF %{MULTIPART_LF_LINE}, \
          SM %{MULTIPART_MISSING_SEMICOLON}, \
          IQ %{MULTIPART_INVALID_QUOTING}, \
          IP %{MULTIPART_INVALID_PART}, \
          IH %{MULTIPART_INVALID_HEADER_FOLDING}, \
          FL %{MULTIPART_FILE_LIMIT_EXCEEDED}'"
    - |
      SecRule MULTIPART_UNMATCHED_BOUNDARY "@eq 1" \
          "id:'200004',phase:2,t:none,log,deny,msg:'Multipart parser detected a possible unmatched boundary.'"
    - |
      SecRule TX:/^COR_/ "!@streq 0" \
          "id:'200005',phase:2,t:none,deny,msg:'Coraza internal error flagged: %{MATCHED_VAR_NAME}'"
    - 'SecResponseBodyAccess On'
    - 'SecResponseBodyMimeType text/plain text/html text/xml'
    - 'SecResponseBodyLimit 524288'
    - 'SecResponseBodyLimitAction ProcessPartial'
    - 'SecDataDir /tmp/'
    - 'SecAuditEngine RelevantOnly'
    - 'SecAuditLogRelevantStatus "^(?:(5|4)(0|1)[0-9])$"'
    - 'SecAuditLogParts ABIJDEFHZ'
    - 'SecAuditLogType Serial'
    - 'SecArgumentSeparator &'
    - 'SecCookieFormat 0'

  # see: https://github.com/corazawaf/coraza-coreruleset/blob/main/rules/%40crs-setup.conf.example
  crs_setup:
    - 'SecDefaultAction "phase:1,log,auditlog,pass"'
    - 'SecDefaultAction "phase:2,log,auditlog,pass"'
    - |
      SecAction \
          "id:900990,\
          phase:1,\
          pass,\
          t:none,\
          nolog,\
          tag:'OWASP_CRS',\
          ver:'OWASP_CRS/4.7.0',\
          setvar:tx.crs_setup_version=470"

defaults_waf:
  # to download pre-compiled binary from 'github.com/O-X-L/coraza-spoa'
  #   else you have to manually install golang,
  #   download the source-code from https://github.com/O-X-L/coraza-spoa and
  #   compile the binary yourself
  install_bin: true
  release: '2025-01'  # github.com/O-X-L/coraza-spoa (branch 'oxl')

  port: 9000
  log:
    level: 'info'
    format: 'json'
    syslog: true
    syslog_prefix: 'waf-'
    poll_interval_sec: 1
    rotate_days: 7

  haproxy_config:
    backend: '/etc/haproxy/waf-coraza.cfg'
    spoe: '/etc/haproxy/waf-coraza-spoe.cfg'

  spoe:
    var_prefix: 'coraza'
    timeout:
      hello: '2s'
      idle: '2m'
      processing: '500ms'

  apps:
    - name: 'default'
