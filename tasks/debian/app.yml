---

- name: "HAProxy WAF | Apps | {{ waf_app_name }} | Check Core-Ruleset {{ waf_app.ruleset_version }}"
  ansible.builtin.file:
    path: "{{ waf_app_rules_default_dir }}"
    state: directory
    mode: 0750
  register: waf_crs_dir

- name: "HAProxy WAF | Apps | {{ waf_app_name }} | Download Core-Ruleset {{ waf_app.ruleset_version }}"
  ansible.builtin.unarchive:
    src: "{{ WAF_HC.url.crs_1 }}{{ waf_app.ruleset_version }}{{ WAF_HC.url.crs_2 }}"
    dest: "{{ waf_app_rules_default_dir }}"
    remote_src: true
    extra_opts: ['--strip-components=1']
    mode: 0750
  when: waf_crs_dir.changed

- name: "HAProxy WAF | Apps | {{ waf_app_name }} | Create rules directory"
  ansible.builtin.file:
    path: "{{ waf_app_rules_dir }}"
    state: directory
    owner: 'root'
    group: "{{ WAF_HC.user }}"
    mode: 0750

- name: "HAProxy WAF | Apps | {{ waf_app_name }} | Add rules {{ waf_app.ruleset_version }}"
  ansible.builtin.shell: |
    cp -r {{ waf_app_rules_default_dir }}/rules/@owasp_crs {{ waf_app_crs_dir }} &&
    chown -R root:{{ WAF_HC.user }} {{ waf_app_crs_dir }}
  args:
    creates: "{{ waf_app_crs_dir }}"
  notify: ['WAF-restart', 'Check-failed']
  tags: skip_ansible_lint  # command-instead-of-module

- name: "HAProxy WAF | Apps | {{ waf_app_name }} | Update Variables"
  ansible.builtin.lineinfile:
    path: "{{ waf_app_rules_dir }}/@owasp_crs/REQUEST-901-INITIALIZATION.conf"
    regexp: "^(.*)setvar:'{{ item.key }}=(.*)'(.*)$"
    line: "\\1setvar:'{{ item.key }}={{ item.value }}'\\3"
    backrefs: true
  with_dict: "{{ waf_app.rules.vars }}"
  tags: [rules]

- name: "HAProxy WAF | Apps | {{ waf_app_name }} | Rule Changes"
  ansible.builtin.include_tasks: debian/app_rule_changes.yml
  vars:
    rule_file: "{{ waf_app_crs_dir }}/{{ rule_change_item.key }}"
    rule_file_cnf: "{{ rule_change_item.value }}"
  loop_control:
    loop_var: rule_change_item
  with_dict: "{{ waf_app.rules.rule_changes }}"
  no_log: true  # less output
  tags: [rules, apps]
  args:
    apply:
      tags: [rules, apps]

- name: "HAProxy WAF | Apps | {{ waf_app_name }} | Create main config"
  ansible.builtin.template:
    src: 'templates/etc/coraza/apps/tmpl/main.conf.j2'
    dest: "{{ waf_app_rules_dir }}/main.conf"
    owner: 'root'
    group: "{{ WAF_HC.user }}"
    mode: 0640
  notify: ['WAF-restart', 'Check-failed']
  tags: [rules]

- name: "HAProxy WAF | Apps | {{ waf_app_name }} | Create rule-setup config"
  ansible.builtin.template:
    src: 'templates/etc/coraza/apps/tmpl/@crs-setup.conf.j2'
    dest: "{{ waf_app_rules_dir }}/@crs-setup.conf"
    owner: 'root'
    group: "{{ WAF_HC.user }}"
    mode: 0640
  notify: ['WAF-restart', 'Check-failed']
  tags: [rules]
